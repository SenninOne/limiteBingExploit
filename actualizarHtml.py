from bs4 import BeautifulSoup

texto = input("Ingresa la conversacion: ")

def separar_mensajes(input_str):
    # Dividir el input en una lista de mensajes
    mensajes = input_str.split(" ")

    # Inicializar las listas de mensajes para cada remitente
    gama_mensajes = []
    bingy_mensajes = []

    # Inicializar el remitente actual como desconocido
    remitente_actual = None

    # Iterar sobre cada mensaje y asignarlo al remitente correspondiente
    for mensaje in mensajes:
        # Si el mensaje comienza con "Gama:", asignarlo a Gama
        if mensaje.startswith("Gama:"):
            remitente_actual = "Gama"
            # Agregar el mensaje a la lista de mensajes de Gama
            gama_mensajes.append(mensaje.replace("Gama:", ""))
        # Si el mensaje comienza con "Bingy:", asignarlo a Bingy
        elif mensaje.startswith("Bingy:"):
            remitente_actual = "Bingy"
            # Agregar el mensaje a la lista de mensajes de Bingy
            bingy_mensajes.append(mensaje.replace("Bingy:", ""))
        # Si el mensaje no comienza con un remitente conocido, agregarlo al mensaje anterior
        else:
            # Verificar que haya un remitente conocido para asignar el mensaje
            if remitente_actual is not None:
                if remitente_actual == "Gama":
                    gama_mensajes[-1] += " " + mensaje
                else:
                    bingy_mensajes[-1] += " " + mensaje

    # Devolver las listas de mensajes de cada remitente
    return gama_mensajes, bingy_mensajes

gamaMensajes, bingyMensajes = separar_mensajes(texto)

print("####################################################")
print("Mensajes de Gama")
print(gamaMensajes)
print("####################################################")
print("Mensajes de Gama")
print(bingyMensajes)

#Generar una lista con los mensages de ambos
mensajesIntercalados = []

for mensajeGama, mensajeBingy in zip(gamaMensajes, bingyMensajes):
    mensajesIntercalados.append(mensajeGama)
    mensajesIntercalados.append(mensajeBingy)

#print("Lista con mensajes intercalados",mensajesIntercalados)

# Cargar el archivo HTML
with open("experimentoJavascript.html", encoding="utf-8") as f:
    soup = BeautifulSoup(f, "html.parser")

# Modificar el contenido de la conversación
conversacion = soup.find("ol")

#Añadir los mensajes nuevos a la lista
for indice, elemento in enumerate(mensajesIntercalados):
    if indice % 2 == 0:
        #print(elemento)
        conversacion.append(soup.new_tag("li"))
        conversacion.find_all("li")[-1].append(soup.new_tag("strong"))
        conversacion.find_all("strong")[-1].append("Gama: ")
        conversacion.find_all("li")[-1].append(elemento)
    else:
        #print(elemento)
        conversacion.append(soup.new_tag("li"))
        conversacion.find_all("li")[-1].append(soup.new_tag("strong"))
        conversacion.find_all("strong")[-1].append("Bingy: ")
        conversacion.find_all("li")[-1].append(elemento)

# Guardar el archivo HTML actualizado
with open("experimentoJavascript.html", "w", encoding="utf-8") as f:
    f.write(str(soup))
